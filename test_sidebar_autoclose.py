"""
Test Auto-Close Sidebar Functionality
Sprawdza czy mobilna nawigacja poprawnie zamyka sidebar
"""

import os
import sys

def test_mobile_navigation_autoclose():
    """Test funkcjonalno≈õci auto-zamykania sidebara"""
    
    print("üîç Test Auto-Close Sidebar dla Mobilnej Nawigacji")
    print("=" * 60)
    
    # Sprawd≈∫ pliki
    files_to_check = [
        ('utils/mobile_navigation.py', 'closeMobileSidebar'),
        ('static/css/mobile-navigation.css', 'mobile-force-hidden'),
        ('main.py', 'render_mobile_navigation'),
        ('sidebar_autoclose_test.html', 'navigateToPage')
    ]
    
    all_checks_passed = True
    
    print("üìÅ Sprawdzanie plik√≥w i funkcjonalno≈õci:")
    
    for file_path, search_term in files_to_check:
        full_path = os.path.join(os.getcwd(), file_path)
        
        if os.path.exists(full_path):
            with open(full_path, 'r', encoding='utf-8') as f:
                content = f.read()
                
            if search_term in content:
                print(f"‚úÖ {file_path}: Zawiera '{search_term}'")
            else:
                print(f"‚ùå {file_path}: Brak '{search_term}'")
                all_checks_passed = False
        else:
            print(f"‚ùå {file_path}: Plik nie istnieje")
            all_checks_passed = False
    
    print("\nüß™ Sprawdzanie implementacji JavaScript:")
    
    # Sprawd≈∫ szczeg√≥≈Çy implementacji
    mobile_nav_file = 'utils/mobile_navigation.py'
    if os.path.exists(mobile_nav_file):
        with open(mobile_nav_file, 'r', encoding='utf-8') as f:
            content = f.read()
            
        # Sprawd≈∫ kluczowe elementy
        js_checks = [
            ('closeMobileSidebar()', 'Funkcja zamykania sidebara'),
            ('window.innerWidth <= 1024', 'Detekcja urzƒÖdze≈Ñ mobilnych'),
            ('mobile-force-hidden', 'CSS class dla ukrywania'),
            ('translateX(-100%)', 'Animacja przesuniƒôcia'),
            ('Auto-close mobile sidebar', 'Komentarz wywo≈Çania funkcji')
        ]
        
        for check, description in js_checks:
            if check in content:
                print(f"‚úÖ {description}: OK")
            else:
                print(f"‚ùå {description}: Brak")
                all_checks_passed = False
    
    print("\nüé® Sprawdzanie CSS:")
    
    css_file = 'static/css/mobile-navigation.css'
    if os.path.exists(css_file):
        with open(css_file, 'r', encoding='utf-8') as f:
            css_content = f.read()
            
        css_checks = [
            ('mobile-force-hidden', 'CSS class ukrywania'),
            ('translateX(-100%)', 'Animacja przesuniƒôcia'),
            ('transition:', 'Smooth transitions'),
            ('z-index: 999', 'Z-index sidebara'),
            ('z-index.*1000', 'Z-index mobilnej nawigacji')
        ]
        
        for check, description in css_checks:
            if check in css_content:
                print(f"‚úÖ {description}: OK")
            else:
                print(f"‚ö†Ô∏è  {description}: Sprawd≈∫ rƒôcznie")
    
    print("\n" + "=" * 60)
    print("üìä WYNIKI:")
    
    if all_checks_passed:
        print("üéâ WSZYSTKIE TESTY PRZESZ≈ÅY POMY≈öLNIE!")
        print("\nüìã Funkcjonalno≈õƒá auto-zamykania sidebara:")
        print("‚úÖ JavaScript: closeMobileSidebar() zaimplementowane")
        print("‚úÖ CSS: Animacje i style gotowe")
        print("‚úÖ Integration: Dodane do main.py")
        print("‚úÖ Test: sidebar_autoclose_test.html utworzony")
        
        print("\nüéØ Jak przetestowaƒá:")
        print("1. Otw√≥rz sidebar_autoclose_test.html w przeglƒÖdarce")
        print("2. Prze≈ÇƒÖcz na widok mobilny (F12 ‚Üí Device Mode)")
        print("3. Kliknij zak≈Çadkƒô w dolnej nawigacji")
        print("4. Sidebar powinien siƒô automatycznie zamknƒÖƒá")
        
        print("\n5. Lub uruchom g≈Ç√≥wnƒÖ aplikacjƒô:")
        print("   streamlit run main.py")
        print("   I przetestuj na prawdziwym urzƒÖdzeniu mobilnym")
        
        return True
    else:
        print("‚ö†Ô∏è  NIEKT√ìRE TESTY NIE PRZESZ≈ÅY")
        print("Sprawd≈∫ powy≈ºsze b≈Çƒôdy i popraw je przed testowaniem")
        return False

def main():
    """Uruchom testy"""
    success = test_mobile_navigation_autoclose()
    
    if success:
        print("\nüí° Dodatkowe informacje:")
        print("- Funkcja dzia≈Ça tylko na urzƒÖdzeniach ‚â§1024px szeroko≈õci")
        print("- U≈ºywa wielu metod zamykania sidebara (fallback)")
        print("- Smooth CSS animations dla lepszego UX")
        print("- Automatyczne dostosowanie g≈Ç√≥wnej tre≈õci")
    
    sys.exit(0 if success else 1)

if __name__ == "__main__":
    main()
